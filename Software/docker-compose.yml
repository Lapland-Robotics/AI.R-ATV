version: '3'

services:

  robot:
    build:
      context: .
      dockerfile: Dockerfile
    image: robot-ros2-image
    container_name: robot-ros2-container
    stdin_open: true
    network_mode: "host"

  nav2:
    build:
      context: .
      dockerfile: Dockerfile
    image: robot-nav2-image
    container_name: robot-nav2-container
    command: ros2 launch navigator navigator.launch.py
    # command: echo "Autonomous Navigation container built, but not activated!"
    network_mode: "host"

  # microros:
  #   build:
  #     context: .
  #     dockerfile: microros.Dockerfile
  #   container_name: robot-microros-container
  #   tty: true
  #   privileged: true
  #   devices:
  #     - /dev/ttyUSB0:/dev/ttyUSB0 # microros over serial
  #   command: serial --dev /dev/ttyUSB0
  #   network_mode: "host"

  # microros-udp:
  #   build:
  #     context: .
  #     dockerfile: microros.Dockerfile
  #   container_name: trigger-container
  #   tty: true
  #   privileged: true
  #   ports:
  #     - "8888:8888/udp"
  #   command: udp4 --port 8888
  #   network_mode: "host"

  # gnss:
  #   build:
  #     context: .
  #     dockerfile: microros.Dockerfile
  #   container_name: robot-gnss-container
  #   tty: true
  #   privileged: true
  #   devices:
  #     - "/dev/ttyUSB1:/dev/ttyUSB1"
  #   command: serial --dev /dev/ttyUSB1
  #   network_mode: "host"

  ouster_lidar:
    image: "ouster-lidar:ros2-humble-cyclonedds"
    container_name: ouster-ros2-container
    privileged: true
    network_mode: "host"
    command: sensor_hostname:=192.168.1.31 ouster_ns:=ouster viz:=false timestamp_mode:="TIME_FROM_ROS_TIME"

  zed_ros2:
    image: zed_ros2_l4t_36.3.0_sdk_5.0.2
    container_name: zed-ros2-container
    runtime: nvidia
    privileged: true
    network_mode: host
    ipc: host
    # pid: host
    environment:
      - NVIDIA_DRIVER_CAPABILITIES=all
      - DISPLAY=${DISPLAY}
    volumes:
      - /tmp/.X11-unix/:/tmp/.X11-unix
      - /dev:/dev
      - /dev/shm:/dev/shm
      - /usr/local/zed/resources/:/usr/local/zed/resources/
      - /usr/local/zed/settings/:/usr/local/zed/settings/
    stdin_open: true     # equivalent to -it
    tty: true            # equivalent to -it
    command: ros2 launch zed_wrapper zed_camera.launch.py camera_model:=zed2 publish_tf:=false

  microros-udp:
    build:
      context: .
      dockerfile: microros.Dockerfile
    container_name: microros-udp-debug-container
    tty: true
    privileged: true
    ports:
      - "8888:8888/udp"
    command: udp4 --port 8888
    network_mode: "host"
  